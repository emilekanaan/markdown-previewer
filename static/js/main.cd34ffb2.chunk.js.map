{"version":3,"sources":["components/Toolbar.js","components/Editor.js","components/Preview.js","components/Footer.js","App.js","index.js"],"names":["Toolbar","props","id","text","Editor","className","name","value","onChange","marked","require","setOptions","breaks","Preview","dangerouslySetInnerHTML","__html","Footer","href","target","rel","App","handleChange","e","setState","state","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAUeA,EARD,SAACC,GACX,OACI,qBAAKC,GAAG,UAAR,SACKD,EAAME,QCUJC,EAbF,SAACH,GACV,OACI,qBAAKI,UAAU,YAAf,SACI,0BACIH,GAAG,SACHI,KAAML,EAAMK,KACZC,MAAON,EAAMM,MACbC,SAAUP,EAAMO,cCP5BC,EAASC,EAAQ,IACrBD,EAAOE,WAAW,CAAEC,QAAO,IAG3B,IAWeC,EAXD,SAACZ,GACX,OACI,qBACIa,wBAAyB,CAAEC,OAAQN,EAAOR,EAAMM,QAChDL,GAAG,aCSAc,EAjBF,WACT,OACI,qBAAKd,GAAG,SAAR,SACI,qDAAwB,IACpB,mBACAe,KAAK,iCACLC,OAAO,SACPC,IAAI,aAHJ,gCC0FDC,E,kDA3Cb,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IAORoB,aAAe,SAACC,GACd,MAAsBA,EAAEJ,OAAlBZ,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,MACZ,EAAKgB,SAAL,eAAiBjB,EAAOC,KARxB,EAAKiB,MAAQ,CACXrB,KAjDW,smCA8CI,E,0CAanB,WAAU,IAAD,OACP,OACE,sBAAKE,UAAU,UAAf,UACE,sBAAKA,UAAU,MAAf,UACE,sBAAKH,GAAG,YAAR,UACE,cAAC,EAAD,CACEC,KAAK,WAEP,cAAC,EAAD,CACEG,KAAK,OACLC,MAAOkB,KAAKD,MAAMrB,KAClBK,SAAU,SAACc,GAAD,OAAO,EAAKD,aAAaC,SAIvC,sBAAKpB,GAAG,aAAR,UACE,cAAC,EAAD,CACEC,KAAK,cAEP,cAAC,EAAD,CACEI,MAAOkB,KAAKD,MAAMrB,aAIxB,cAAC,EAAD,W,GAtCUuB,IAAMC,WC/CxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cd34ffb2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nlet Toolbar = (props) => {\r\n    return (\r\n        <div id='toolbar'>\r\n            {props.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toolbar;","import React from 'react';\r\n\r\nlet Editor = (props) => {\r\n    return (\r\n        <div className='grow-wrap'>\r\n            <textarea \r\n                id='editor'\r\n                name={props.name}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Editor;","import React from 'react';\r\n\r\nlet marked = require('marked')\r\nmarked.setOptions({ breaks:true });\r\n\r\n\r\nlet Preview = (props) => {\r\n    return (\r\n        <div \r\n            dangerouslySetInnerHTML={{ __html: marked(props.value)}}\r\n            id='preview'\r\n        >\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preview;","import React from 'react';\r\n\r\nlet Footer = () => {\r\n    return (\r\n        <div id='footer'>\r\n            <p>coded and written by{' '}\r\n                <a \r\n                href=\"https://github.com/emilekanaan\" \r\n                target=\"_blank\" \r\n                rel=\"noreferrer\"\r\n                \r\n                >\r\n                    Emile Kanaan\r\n                </a>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react'\nimport './App.css';\nimport Toolbar from './components/Toolbar';\nimport Editor from './components/Editor';\nimport Preview from './components/Preview';\nimport Footer from './components/Footer.js';\n\nconst placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      text: placeholder,\n\n    }\n  }\n  \n  handleChange = (e) => {\n    let { name, value } = e.target;\n    this.setState({ [name]: value })\n  }\n\n  render() {\n    return (\n      <div className='general'>\n        <div className=\"App\">\n          <div id='editordiv'>\n            <Toolbar \n              text='Editor'\n            />\n            <Editor \n              name='text'\n              value={this.state.text}\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n\n          <div id='previewdiv'>\n            <Toolbar \n              text='Previewer'\n            />\n            <Preview \n              value={this.state.text}\n            />\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}